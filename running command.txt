<<<<<<< HEAD
$ For Serial Execution use these commands
=======
For Serial Execution use these commands
>>>>>>> 42606a1ca11ccbe3a36af1fda282ef3dcf97a4ff

g++ -std=c++11 serial_execution.cpp -o serial_sssp

./serial_sssp sample_graph.txt sample_updates.txt 10000 output.txt


<<<<<<< HEAD
$ For Parallel Execution use these commands

export OMP_NUM_THREADS=9
export OMP_PROC_BIND=spread
export OMP_PLACES=cores
export OMPI_ALLOW_RUN_AS_ROOT=1
export OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1
=======
For Parallel Execution use these commands
>>>>>>> 42606a1ca11ccbe3a36af1fda282ef3dcf97a4ff
 
mpicxx -O3 -march=native -funroll-loops -fopenmp \
  -DCL_TARGET_OPENCL_VERSION=200 \
  -o sssp main.cpp graph.cpp utils.cpp sssp.cpp opencl_utils.cpp \
  -I. -L/usr/local/lib -lOpenCL -lmetis

<<<<<<< HEAD
mpirun --allow-run-as-root --hostfile hosts --bind-to core -np 4 ./sssp sample_g
raph.txt sample_updates.txt 10000 output.txt --openmp --opencl
$ or samp
mpirun --use-hwthread-cpus --bind-to core:overload-allowed -np 4 ./sssp sample_graph.txt sample_updates.txt 10000 output.txt --openmp --opencl
=======
export OMP_NUM_THREADS = 9
export OMP_PROC_BIND=spread
export OMP_PLACES=cores
mpirun --bind-to core -np 4 ./sssp sample_graph.txt sample_updates.txt 10000 output.txt --openmp --opencl
>>>>>>> 42606a1ca11ccbe3a36af1fda282ef3dcf97a4ff
